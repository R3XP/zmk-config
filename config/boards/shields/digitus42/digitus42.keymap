#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define DE_A        A                  // A
#define DE_B        B                  // B
#define DE_C        C                  // C
#define DE_D        D                  // D
#define DE_E        E                  // E
#define DE_F        F                  // F
#define DE_G        G                  // G
#define DE_H        H                  // H
#define DE_I        I                  // I
#define DE_J        J                  // J
#define DE_K        K                  // K
#define DE_L        L                  // L
#define DE_M        M                  // M
#define DE_N        N                  // N
#define DE_O        O                  // O
#define DE_P        P                  // P
#define DE_Q        Q                  // Q
#define DE_R        R                  // R
#define DE_S        S                  // S
#define DE_T        T                  // T
#define DE_U        U                  // U
#define DE_V        V                  // V
#define DE_W        W                  // W
#define DE_X        X                  // X
#define DE_Y        Z                  // Y
#define DE_Z        Y                  // Z

#define DE_DOT      PERIOD             // .
#define DE_COMM     COMMA              // ,
#define DE_MINS     SLASH              // -

#define DE_AE       SINGLE_QUOTE       // Ä
#define DE_OE       SEMICOLON          // Ö
#define DE_UE       LEFT_BRACKET       // Ü
#define DE_SS       MINUS              // ß

#define DE_CIRC     GRAVE             // ^ (dead)
#define DE_EXLM     LS(NUMBER_1)      // !
#define DE_DQUO     LS(NUMBER_2)      // "
#define DE_DLR      LS(NUMBER_4)      // $
#define DE_AMPR     LS(NUMBER_6)      // &
#define DE_PERC     LS(NUMBER_5)      // %

#define DE_PIPE     RA(DE_LABK)       // |
#define DE_AT       RA(DE_Q)          // @
#define DE_TILD     RA(DE_PLUS)       // ~
#define DE_EURO     RA(DE_E)          // €
#define DE_PLUS     RIGHT_BRACKET     // +
#define DE_ASTR     LS(DE_PLUS)       // *
#define DE_DEG      LS(DE_CIRC)       // °
#define DE_SECT     LS(NUMBER_3)      // §

#define DE_LPRN     LS(NUMBER_8)      // (
#define DE_RPRN     LS(NUMBER_9)      // )
#define DE_LCBR     RA(NUMBER_7)      // {
#define DE_RCBR     RA(NUMBER_0)      // }
#define DE_LBRC     RA(NUMBER_8)      // [
#define DE_RBRC     RA(NUMBER_9)      // ]
#define DE_LABK     NON_US_BACKSLASH  // <
#define DE_RABK     LS(DE_LABK)       // >
#define DE_ACUT     EQUAL             // ´ (dead)
#define DE_HASH     NON_US_HASH       // #
#define DE_COLN     LS(DE_DOT)        // :
#define DE_SLSH     LS(NUMBER_7)      // /
#define DE_EQL      LS(NUMBER_0)      // =
#define DE_QUES     LS(DE_SS)         // ?
#define DE_GRV      LS(DE_ACUT)       // ` (dead)
#define DE_QUOT     LS(DE_HASH)       // '
#define DE_SCLN     LS(DE_COMM)       // ;
#define DE_UNDS     LS(DE_MINS)       // _
#define DE_BSLS     RA(DE_SS)         // (backslash)

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Z &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Y &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};